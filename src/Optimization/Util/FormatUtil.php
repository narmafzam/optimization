<?php
 namespace Optimization\Util; class FormatUtil extends Util { public static function getParseUrl(string $url) { goto H8T8J; CLuBM: $url = wp_parse_url($encodedUrl); goto etOl2; IX_2o: $fragment = isset($url["\146\162\141\x67\155\x65\156\164"]) ? urldecode($url["\x66\162\x61\x67\x6d\145\x6e\x74"]) : ''; goto x2qej; Y58mF: DKyqk: goto U6Ge_; bYzRH: $query = isset($url["\161\165\x65\x72\x79"]) ? urldecode($url["\x71\x75\x65\x72\x79"]) : ''; goto IX_2o; LDKhR: $scheme = isset($url["\163\143\x68\x65\155\x65"]) ? urldecode($url["\163\143\x68\x65\155\x65"]) : ''; goto bYzRH; x2qej: $parsed = (array) self::applyFilters("\x6f\x70\x74\x69\x6d\x69\x7a\x61\164\151\157\156\137\160\141\162\163\x65\137\165\162\154", ["\150\x6f\x73\x74" => $host, "\x70\x61\164\x68" => $path, "\x73\x63\150\x65\155\145" => $scheme, "\x71\x75\x65\x72\x79" => $query, "\146\x72\141\x67\x6d\x65\156\x74" => $fragment]); goto Y58mF; oZJ0O: if (!is_string($url)) { goto DKyqk; } goto jIhqr; jIhqr: $encodedUrl = preg_replace_callback("\45\x5b\136\72\x2f\100\x3f\x26\x3d\43\135\x2b\x25\x75\x73\x44", function ($matches) { return rawurlencode($matches[0]); }, $url); goto CLuBM; RCURm: $path = isset($url["\160\x61\x74\150"]) ? urldecode($url["\160\141\164\150"]) : ''; goto LDKhR; U6Ge_: return $parsed; goto i8h1_; H8T8J: $parsed = []; goto oZJ0O; etOl2: $host = isset($url["\150\x6f\163\164"]) ? strtolower(urldecode($url["\150\157\163\x74"])) : ''; goto RCURm; i8h1_: } public static function maybeUrlNoDots($url) { goto ti6F_; Jyg75: return $url; goto QRBzL; dROll: SV_n3: goto Jyg75; ti6F_: if (!self::isUrlNoDots()) { goto SV_n3; } goto tgtgv; tgtgv: $url = str_replace("\x2e", "\137", $url); goto dROll; QRBzL: } public static function isUrlNoDots() : bool { return (bool) self::applyFilters("\157\160\x74\151\155\x69\172\141\164\151\157\x6e\x5f\165\x72\154\x5f\156\157\x5f\144\x6f\164\x73", false); } public static function addUrlProtocol(string $url) { goto bLfHQ; puiRo: if (!(substr($url, 0, 2) !== "\57\57")) { goto aNl_K; } goto BAMHl; BAMHl: $url = "\x2f\57" . $url; goto V8j0W; bLfHQ: if (!(!strpos($url, "\x68\x74\164\160\x3a\x2f\57") !== false && !strpos($url, "\x68\x74\x74\x70\163\72\x2f\x2f") !== false)) { goto jO0SA; } goto puiRo; x5Kjy: $url = set_url_scheme($url); goto qHou8; V8j0W: aNl_K: goto x5Kjy; qHou8: jO0SA: goto veHFL; veHFL: return $url; goto ZODka; ZODka: } public static function cleanExcludeFile(string $file) { goto VXO0p; vLEju: XezEs: goto nJdLg; nJdLg: return false; goto ZxD0C; sbRJU: return wp_parse_url($file, PHP_URL_PATH); goto vLEju; VXO0p: if (!$file) { goto XezEs; } goto sbRJU; ZxD0C: } public static function removeUrlProtocol(string $url, $no_dots = false) { goto O3Kz2; O3Kz2: $url = str_replace(["\x68\x74\164\160\x3a\57\x2f", "\150\x74\x74\x70\x73\x3a\x2f\x2f"], '', $url); goto bzhJT; I0DZM: return $url; goto fRCPs; bzhJT: $url = self::maybeUrlNoDots($url); goto I0DZM; fRCPs: } public static function extractUrlComponent(string $url, $component) { return _get_component_from_parsed_url_array(wp_parse_url($url), $component); } }
