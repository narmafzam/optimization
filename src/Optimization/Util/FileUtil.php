<?php
 namespace Optimization\Util; use Boilerplate\Filesystem; use Exception; use FilesystemIterator; use RecursiveDirectoryIterator; use RecursiveIteratorIterator; use RecursiveRegexIterator; use RegexIterator; use UnexpectedValueException; class FileUtil extends Util { public static function removeConfigFiles() { goto Ky2Iz; eNfPX: $iterator = self::getIterator($configPath); goto rDUt_; Ky2Iz: $configPath = self::getConstant("\117\120\124\x49\x4d\111\x5a\x41\x54\x49\x4f\116\137\x43\117\116\106\111\107\137\x50\101\124\x48"); goto AULGj; p8tqa: a35Qv: goto XgeJY; X2MTL: if (!($configPath && $filesystem->exists($configPath))) { goto K_24f; } goto eNfPX; XgeJY: K_24f: goto cvsvf; AULGj: $filesystem = Filesystem::getInstance(); goto X2MTL; rDUt_: foreach ($iterator as $item) { goto pRleU; pRleU: if (!$item->isFile()) { goto BurBT; } goto T60Ia; IIPWT: BurBT: goto TovYg; TovYg: zF_EN: goto VreyW; T60Ia: $filesystem->remove($item->getPathname()); goto IIPWT; VreyW: } goto p8tqa; cvsvf: } public static function getDirectorySize($dir) { goto H6noB; jwxZ4: return $size; goto tCb1v; WExE7: try { goto weggy; B9twx: UXhz_: goto d57F0; weggy: $files = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($dir, FilesystemIterator::SKIP_DOTS)); goto Mdjya; Mdjya: foreach ($files as $file) { $size += $file->getSize(); ljDjV: } goto B9twx; d57F0: } catch (UnexpectedValueException $e) { } goto jwxZ4; H6noB: $size = 0; goto WExE7; tCb1v: } public static function getFilesystemPerms($type) { goto NqoJQ; C343P: oSgDi: goto C1uD_; htQRg: B19ja: goto BMlv3; T062H: B0U0i: goto rUMIV; XqcnY: return $perms[$type]; goto mccKW; h2an3: whSZd: goto U_MBi; TqflD: goto B0U0i; goto h2an3; n3RhF: $perms[$type] = $chmodDir > 0 ? $chmodDir : fileperms(self::getConstant("\101\x42\x53\x50\101\124\x48")) & 0777 | 0755; goto T062H; pXo47: if (!self::getConstant("\127\x50\x5f\117\x50\124\111\115\111\132\101\124\x49\117\116\137\x49\x53\137\124\x45\x53\124\111\116\x47", false)) { goto oSgDi; } goto O9_wQ; KubGI: if ("\x64\x69\162" === $type) { goto whSZd; } goto Aa67y; BMlv3: v52m2: goto EmuGb; rUMIV: return $perms[$type]; goto AI2Cr; O9_wQ: $perms = []; goto C343P; Aa67y: $chmodFile = (int) self::getConstant("\106\x53\x5f\x43\110\115\117\104\x5f\106\x49\114\105", 0); goto jRrGw; NqoJQ: static $perms = array(); goto pXo47; EmuGb: if (!isset($perms[$type])) { goto PLx3K; } goto XqcnY; mccKW: PLx3K: goto KubGI; U_MBi: $chmodDir = (int) self::getConstant("\x46\x53\137\x43\x48\115\117\x44\137\104\111\x52", 0); goto n3RhF; jRrGw: $perms[$type] = $chmodFile > 0 ? $chmodFile : fileperms(self::getConstant("\x41\102\123\x50\101\124\110") . "\151\x6e\144\145\170\x2e\160\150\160") & 0777 | 0644; goto TqflD; C1uD_: switch ($type) { case "\x64\x69\x72": case "\x64\x69\162\163": case "\146\157\x6c\x64\145\x72": case "\x66\x6f\154\x64\145\162\163": $type = "\x64\151\x72"; goto v52m2; case "\146\x69\154\145": case "\x66\151\x6c\145\163": $type = "\146\151\x6c\x65"; goto v52m2; default: return 0755; } goto htQRg; AI2Cr: } public static function isWindowsFS($hardReset = false) { goto kj7wT; taMsD: YNZ6q: goto j7vH1; KFsnG: ts53y: goto xcOsX; H92zg: $isWindows = DIRECTORY_SEPARATOR === "\x5c" && !self::getConstant("\127\120\x5f\117\x50\124\111\x4d\x49\132\101\x54\111\117\116\137\122\x55\x4e\x4e\x49\x4e\107\137\x56\106\123", false); goto KFsnG; kj7wT: static $isWindows = null; goto VdKxu; vl5gm: $isWindows = null; goto taMsD; j7vH1: if (!is_null($isWindows)) { goto ts53y; } goto H92zg; xcOsX: return $isWindows; goto cPZ7B; VdKxu: if (!$hardReset) { goto YNZ6q; } goto vl5gm; cPZ7B: } public static function getRecursiveDirFilesByRegex($path, $regex) { try { $iterator = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($path, FilesystemIterator::SKIP_DOTS)); $dirs = new RegexIterator($iterator, $regex, RecursiveRegexIterator::MATCH); } catch (Exception $e) { $dirs = []; } return $dirs; } public static function normalizePath($path, $escape = false, $force = false) { goto gRirc; T8wgH: $path = str_replace("\57", "\x5c", $path); goto QI2x_; OvWB1: IFs2L: goto oe6NC; OiovJ: kobnw: goto ft_Ok; N2dk2: if (!$escape) { goto kobnw; } goto iGkgw; YiM_K: n45jH: goto N2dk2; oe6NC: return wp_normalize_path($path); goto t6qyW; QI2x_: return $escape ? str_replace("\x5c", "\x5c\134", $path) : $path; goto YiM_K; dx5qY: return $path; goto OvWB1; iGkgw: return str_replace("\x2f", "\x5c\x2f", $path); goto OiovJ; ft_Ok: if ($force) { goto IFs2L; } goto dx5qY; gRirc: if (!self::isWindowsFS($path)) { goto n45jH; } goto T8wgH; t6qyW: } public static function rrmdir($dir, array $dirs2preserve = array(), $filesystem = null) { goto HoTOF; ACN0c: C07Tr: goto FuRPg; qEGMt: $dir = untrailingslashit($dir); goto yP8bs; YlP6s: if (empty($keys)) { goto YrFCl; } goto jngxT; OSsAB: JWORb: goto qEGMt; FuRPg: $filesystem::remove($dir); goto HzWRU; FHuIp: $keys = array_filter($keys); goto YlP6s; mkgm0: YrFCl: goto JCMsi; HA7Yl: SREjp: goto nFRF3; nmUAM: $entries = []; goto gUB63; jngxT: $entries = array_diff($entries, $keys); goto mkgm0; d4BOi: if (!($filesystem::isDirectory($dir) && $filesystem->exists($nowebpDetectFile))) { goto jlY2J; } goto jX1kk; yP8bs: do_action("\x62\145\x66\157\162\145\137\157\x70\x74\x69\x6d\151\172\x61\164\151\x6f\156\x5f\162\x72\155\144\151\162", $dir, $dirs2preserve); goto HYznc; WLklw: if (!(!empty($dirs2preserve) && !empty($entries))) { goto OZKLQ; } goto HfpkA; JCMsi: jfFJR: goto CRThV; u1Ncr: $filesystem = getFilesystem(); goto OSsAB; vcF7i: foreach ($dirs2preserve as $dir2preserve) { goto C5eqE; XjfjU: ZNeOs: goto e4oPb; dFHXx: $keys[] = reset($matches); goto XjfjU; C5eqE: $matches = preg_grep("\43\136{$dir2preserve}\44\43", $entries); goto dFHXx; e4oPb: } goto HA7Yl; HoTOF: if ($filesystem) { goto JWORb; } goto u1Ncr; nFRF3: if (empty($keys)) { goto jfFJR; } goto FHuIp; HfpkA: $keys = []; goto vcF7i; CRThV: OZKLQ: goto A1wLp; ip2nz: jlY2J: goto RJQQ3; RJQQ3: if ($filesystem::isDirectory($dir)) { goto duo33; } goto r0Gme; iuT2t: duo33: goto nmUAM; HzWRU: do_action("\141\146\x74\145\x72\137\x6f\160\x74\x69\155\x69\x7a\141\x74\151\157\156\137\x72\162\x6d\144\151\x72", $dir, $dirs2preserve); goto SoeFH; owWTv: if (!($filesystem::isDirectory($dir) && $filesystem::exists($nginxMobileDetectFile))) { goto murL1; } goto N3IM3; N3IM3: $filesystem::remove($nginxMobileDetectFile); goto tXX3K; gUB63: try { foreach (new FilesystemIterator($dir) as $entry) { $entries[] = $entry->getPathname(); qLfqN: } iKc9Q: } catch (Exception $e) { } goto WLklw; UdFdZ: return; goto iuT2t; A1wLp: foreach ($entries as $entry) { goto cY9jE; cY9jE: if (!$filesystem::isDirectory($entry)) { goto Dshbi; } goto M7lyI; PP1Tc: $filesystem::remove($entry); goto BUH_p; M7lyI: self::rrmdir($entry, $dirs2preserve, $filesystem); goto p2RDi; Hn9KL: Dshbi: goto PP1Tc; pTv2w: Mb9Wn: goto jXbO5; BUH_p: yiCDU: goto pTv2w; p2RDi: goto yiCDU; goto Hn9KL; jXbO5: } goto ACN0c; HYznc: $nginxMobileDetectFile = $dir . "\x2f\56\x6d\157\142\151\154\x65\55\x61\143\164\151\166\145"; goto owWTv; r0Gme: $filesystem::remove($dir); goto UdFdZ; kBKzU: $nowebpDetectFile = $dir . "\57\x2e\x6e\x6f\55\x77\145\142\x70"; goto d4BOi; jX1kk: $filesystem::remove($nowebpDetectFile); goto ip2nz; tXX3K: murL1: goto kBKzU; SoeFH: } }
