<?php
 namespace Optimization\Cache; use Boilerplate\Filesystem; use Optimization\Util\FileUtil; use Optimization\Util\Util as BaseClass; use Exception; use FilesystemIterator; use IteratorIterator; use RegexIterator; class Util extends BaseClass { public static function getCachePath() { goto Zwoqt; Zwoqt: $path = self::getConstant("\x4f\x50\x54\111\x4d\x49\132\x41\x54\x49\117\116\x5f\x43\101\x43\110\105\x5f\120\x41\x54\110", false); goto nx84g; nx84g: $filesystem = Filesystem::getInstance(); goto GneXL; GneXL: if ($filesystem->exists($path)) { goto wOOmx; } goto ID9Ht; smeH5: IFut9: goto T2mu2; Yszp8: wOOmx: goto oetcS; T2mu2: return $path; goto Z_pyE; f7RRf: $path = untrailingslashit($path); goto smeH5; ID9Ht: $filesystem->mkdir($path); goto Yszp8; oetcS: if (!is_string($path)) { goto IFut9; } goto f7RRf; Z_pyE: } public static function initCacheDirectory() { goto JpxoK; bZj82: $filesystem->touch($htaccess); goto jsWWy; MHtXD: $filesystem->touch("{$cachePath}\x2f\151\x6e\144\145\170\56\150\x74\155\x6c"); goto zvOZ4; gvxcZ: if ($filesystem->isFile("{$cachePath}\x2f\151\x6e\x64\145\x78\x2e\150\x74\x6d\x6c")) { goto qvjb8; } goto MHtXD; Hmj4j: t0bk8: goto gvxcZ; ggezz: if ($filesystem->isDirectory(OPTIMIZATION_BUSTING_PATH)) { goto stlO5; } goto zDpG1; jtW9v: u21Qv: goto beBPw; zvOZ4: qvjb8: goto VfylC; JpxoK: global $is_apache; goto rRMud; beBPw: j2icL: goto ggezz; a_ctl: if ($filesystem->isDirectory($cachePath)) { goto t0bk8; } goto ocmad; hFCL1: stlO5: goto x8akC; ocmad: $filesystem->mkdir($cachePath); goto Hmj4j; tiERg: $filesystem = Filesystem::getInstance(); goto a_ctl; twzET: $htaccess = "{$cachePath}\57\x2e\x68\164\141\143\x63\x65\x73\163"; goto An3um; rRMud: $cachePath = self::getCachePath(); goto tiERg; zDpG1: $filesystem->mkdir(OPTIMIZATION_BUSTING_PATH); goto hFCL1; jsWWy: $filesystem->appendToFile($htaccess, "\74\x49\x66\x4d\x6f\144\165\x6c\145\40\155\157\x64\137\141\x75\x74\157\x69\x6e\x64\x65\170\x2e\143\x3e\12\x4f\x70\164\151\x6f\x6e\x73\x20\55\111\156\x64\145\170\145\x73\xa\74\57\111\x66\115\157\144\165\154\x65\76"); goto jtW9v; VfylC: if (!$is_apache) { goto j2icL; } goto twzET; An3um: if ($filesystem->isFile($htaccess)) { goto u21Qv; } goto bZj82; x8akC: } public static function getCacheDirectories(string $hostUrl, $cachePath = '', $hardReset = false) { goto cFbly; BQJLz: foreach ($entries as $entry) { $domainDirs[$hostUrl][] = $entry->getPathname(); o5f1h: } goto BeAmb; iLMD1: try { $iterator = new IteratorIterator(new FilesystemIterator($cachePath)); } catch (Exception $e) { return []; } goto AXXjb; NmEs1: $domainDirs = []; goto pbTyj; eHb3q: $domainDirs[$hostUrl] = []; goto BQJLz; rkv0U: return $domainDirs[$hostUrl]; goto CM6AH; cFbly: static $domainDirs = array(); goto gMoe_; pbTyj: return; goto uA0cF; JjJW_: try { $entries = new RegexIterator($iterator, $regex); } catch (Exception $e) { return []; } goto eHb3q; nUEMQ: if (!isset($domainDirs[$hostUrl])) { goto sU1qv; } goto rkv0U; UX8eS: return $domainDirs[$hostUrl]; goto JjNaV; CM6AH: sU1qv: goto Jkb3M; AXXjb: $regex = sprintf("\57\45\x31\x24\163\45\x32\x24\x73\50\56\52\x29\57\x69", FileUtil::normalizePath($cachePath, true), $hostUrl); goto JjJW_; YYkTK: Svpec: goto iLMD1; BeAmb: tKe3U: goto UX8eS; Jkb3M: if (!empty($cachePath)) { goto Svpec; } goto TQwgw; TQwgw: $cachePath = self::getCachePath(); goto YYkTK; uA0cF: AXjeq: goto nUEMQ; gMoe_: if (!(true === $hardReset)) { goto AXjeq; } goto NmEs1; JjNaV: } }
