<?php
 namespace Optimization\Cache; use Boilerplate\Util\PostUtil; use Boilerplate\Util\UserUtil; use Optimization\Purge as BaseClass; use Optimization\Util\FileUtil; use Optimization\Util\FormatUtil; use Optimization\Util\I18NUtil; class Purge extends BaseClass { public function __construct() { goto FkaZD; HKz6M: $this->paths = [Util::getCachePath()]; goto t0AM0; FkaZD: $this->id = "\143\x61\x63\150\145"; goto HKz6M; t0AM0: parent::__construct(); goto JBIS0; JBIS0: } public function addActions() : self { $this->addAction("\144\x65\154\x65\164\145\137\x70\157\163\x74", [$this, "\143\154\x65\x61\156\x50\157\163\x74"])->addAction("\x77\160\x5f\165\160\144\141\164\145\x5f\156\141\166\x5f\x6d\x65\x6e\x75", [$this, "\x63\154\x65\x61\156\104\x6f\155\141\x69\x6e"])->addAction("\165\160\144\x61\x74\145\137\x6f\x70\164\151\157\x6e\x5f\163\151\144\x65\x62\x61\x72\x73\x5f\x77\151\x64\147\x65\x74\163", [$this, "\143\154\145\x61\x6e\x44\157\x6d\x61\x69\x6e"])->addAction("\160\x65\162\x6d\x61\x6c\151\x6e\153\137\x73\x74\162\165\x63\164\x75\162\145\137\x63\x68\141\x6e\147\145\144", [$this, "\x63\154\145\x61\x6e\104\x6f\x6d\141\151\156"])->addAction("\145\144\x69\x74\x5f\x74\x65\x72\155", [$this, "\155\x61\171\x62\145\120\x75\162\x67\x65\103\141\143\150\145\117\156\124\145\x72\155\103\x68\x61\156\147\x65"], 3)->addAction("\143\x72\145\x61\164\145\137\164\145\162\x6d", [$this, "\x6d\x61\171\x62\x65\120\165\162\x67\x65\103\x61\143\x68\145\x4f\x6e\x54\x65\162\x6d\103\x68\x61\156\x67\145"], 3)->addAction("\144\x65\x6c\x65\164\145\137\x74\x65\x72\155", [$this, "\x6d\141\171\x62\145\x50\165\162\x67\x65\103\141\143\x68\145\117\156\124\145\x72\x6d\x43\150\x61\156\147\x65"], 3)->addAction("\x70\162\x65\x5f\x70\x6f\163\164\x5f\x75\x70\x64\x61\x74\145", [$this, "\160\165\x72\x67\145\120\x6f\163\x74\x4f\x6e\123\x6c\165\147\x43\150\x61\x6e\x67\x65"], 2, 99999)->addAction("\167\x70\137\x75\160\144\x61\164\145\137\143\157\155\155\x65\156\164\x5f\x63\157\x75\156\x74", [$this, "\x63\x6c\145\x61\x6e\x50\157\163\x74"])->addAction("\165\160\x64\141\x74\x65\x5f\x6f\160\164\151\157\x6e\137\x74\x61\147\137\x62\x61\x73\145", [$this, "\x63\x6c\145\141\x6e\104\157\x6d\141\x69\x6e"])->addAction("\165\160\144\x61\x74\x65\137\157\x70\x74\x69\157\x6e\137\x63\x61\x74\145\x67\x6f\x72\171\x5f\x62\141\163\x65", [$this, "\143\154\145\141\156\x44\x6f\155\x61\151\156"])->addAction("\141\x64\x64\x5f\x6c\x69\x6e\153", [$this, "\143\154\x65\141\x6e\x44\x6f\155\x61\x69\156"])->addAction("\x65\x64\151\164\137\x6c\151\x6e\x6b", [$this, "\143\154\x65\141\x6e\x44\157\155\x61\x69\156"])->addAction("\144\x65\154\145\164\x65\x5f\x6c\151\156\153", [$this, "\x63\x6c\145\141\x6e\104\157\155\141\151\156"])->addAction("\143\165\x73\x74\157\x6d\151\x7a\x65\137\163\141\x76\145", [$this, "\x63\x6c\x65\141\156\x44\157\x6d\141\151\156"])->addAction("\x75\160\144\x61\x74\x65\137\157\160\x74\x69\x6f\x6e\137\164\150\x65\155\x65\x5f\155\x6f\144\163\x5f" . Util::getOption("\163\164\171\x6c\145\163\x68\145\145\164"), [$this, "\x63\x6c\x65\141\156\104\x6f\x6d\x61\x69\156"])->addAction("\x77\x70\x5f\x74\162\x61\163\x68\137\x70\157\163\x74", [$this, "\x63\154\x65\141\x6e\x50\x6f\163\164"])->addAction("\143\x6c\145\x61\x6e\137\x70\x6f\163\164\137\143\x61\143\x68\145", [$this, "\143\154\145\141\156\x50\157\x73\164"])->addAction("\160\x72\145\137\160\157\x73\164\x5f\x75\x70\144\141\164\x65", [$this, "\143\154\x65\141\156\x50\157\163\164\x43\x61\x63\150\x65\x4f\x6e\x53\164\141\x74\165\x73\x43\x68\141\156\147\x65"], 2)->addAction("\x61\144\x6d\x69\x6e\x5f\x70\157\163\164\x5f\x6f\160\x74\151\x6d\x69\x7a\141\164\151\157\156\137\160\165\x72\147\145\x5f\157\160\x63\x61\x63\150\145", [$this, "\x61\x64\x6d\151\156\120\x6f\163\164\120\165\162\147\x65\117\160\143\x61\143\x68\x65"])->addAction("\x64\x65\x6c\145\x74\x65\137\165\x73\145\162", [$this, "\160\165\x72\147\x65\x55\163\145\162\103\141\x63\x68\145"])->addAction("\160\x72\157\x66\151\x6c\145\x5f\165\160\144\x61\164\145", [$this, "\160\x75\162\x67\x65\125\x73\x65\x72\x43\x61\x63\x68\x65"]); return parent::addActions(); } public function purgePostOnSlugChange($postId, $data) { goto P6hec; rh4oo: JfX_n: goto dy3LT; P6hec: $status = PostUtil::getStatus($postId); goto uVJFm; uVJFm: if (in_array($status, ["\x64\x72\x61\146\x74", "\x70\x65\x6e\x64\x69\156\147", "\141\x75\164\157\55\x64\x72\x61\146\164"], true)) { goto JfX_n; } goto wk67S; fpsuW: oAv2S: goto rh4oo; wk67S: $slug = PostUtil::getSlug($postId); goto MOU4r; MOU4r: if (!($slug && $slug !== $data["\x70\x6f\163\164\x5f\x6e\x61\x6d\145"])) { goto oAv2S; } goto l6MHh; l6MHh: $this->cleanFiles(PostUtil::getPermalink($postId)); goto fpsuW; dy3LT: } public function addFilters() : self { $this->addFilter("\x77\151\144\x67\x65\x74\137\165\x70\x64\x61\164\145\x5f\x63\141\154\x6c\x62\x61\x63\x6b", [$this, "\167\151\x64\x67\145\x74\125\160\x64\x61\x74\x65\x43\x61\154\x6c\x62\x61\143\153"]); return parent::addFilters(); } public function resetOpcache() { goto xN3Ld; TGVMZ: i1Oix: goto fgICE; q8HaP: return $reset; goto yxV2c; y22sw: do_action("\157\160\x74\x69\155\x69\172\x61\x74\x69\x6f\x6e\137\141\x66\164\x65\x72\x5f\162\x65\x73\x65\164\x5f\x6f\x70\x63\141\143\x68\145"); goto q8HaP; Z0zrz: return false; goto X75I4; fgICE: if ($canReset) { goto L04B0; } goto pWrPj; qHzQD: L04B0: goto DDClV; pWrPj: return false; goto qHzQD; B0XNo: $restrict_api = ini_get("\157\x70\x63\141\x63\x68\145\56\162\x65\x73\x74\162\x69\x63\164\x5f\141\160\151"); goto RYTEX; BSfSM: do_action("\x6f\160\x74\151\155\x69\x7a\141\x74\151\157\x6e\137\142\145\146\x6f\162\x65\137\x72\x65\x73\x65\164\x5f\157\x70\143\141\x63\x68\145"); goto thz0w; thz0w: if (isset($canReset)) { goto i1Oix; } goto Ghb7U; R_d0K: $canReset = true; goto TGVMZ; xN3Ld: static $canReset; goto BSfSM; DDClV: $reset = opcache_reset(); goto y22sw; RYTEX: if (!($restrict_api && strpos(__FILE__, $restrict_api) !== 0)) { goto LpDXh; } goto i2B7G; i2B7G: $canReset = false; goto Z0zrz; Ghb7U: if (!function_exists("\157\160\143\x61\143\x68\x65\x5f\162\145\163\x65\164")) { $canReset = false; return false; } goto B0XNo; X75I4: LpDXh: goto R_d0K; yxV2c: } public function purgeUserCache($user) { goto Wzo09; yIZbk: $this->cleanUser($user); goto zFoyo; zFoyo: Tei6k: goto QGWD6; Wzo09: if (!$this->shouldPurgeUserCache()) { goto Tei6k; } goto yIZbk; QGWD6: } private function shouldPurgeUserCache() { goto XmDox; nFoC_: raZnr: goto y2b9r; XmDox: $should = false; goto CAqON; CAqON: if (!Setting::isCacheLoggedUser()) { goto raZnr; } goto YWq8k; y2b9r: return $should; goto MKR_J; YWq8k: $should = !(bool) $this->applyFilters("\157\160\x74\x69\155\x69\x7a\141\164\151\x6f\x6e\x5f\x63\157\155\155\157\x6e\x5f\x63\141\x63\x68\x65\137\154\x6f\147\x67\x65\144\137\x75\163\145\162\x73", false); goto nFoC_; MKR_J: } public function cleanUser($id, $lang = '') { goto hZJgP; G9A6l: $user = UserUtil::getField($id); goto jL5gW; hZJgP: $urls = !$lang || is_object($lang) ? I18NUtil::getUri() : I18NUtil::getHomeUrlByLang($lang); goto h4AE4; h4AE4: $urls = (array) $urls; goto iBXkX; Qy4hh: foreach ($urls as $url) { goto Bc79b; QQQJu: foreach ($dirs as $dir) { FileUtil::rrmdir($dir, I18NUtil::getDirectoriesToPreserve($lang)); l4ls8: } goto ADpR1; lNXsu: $dirs = glob($root . "\52", GLOB_NOSORT); goto HRamT; HRamT: if (!$dirs) { goto o7_cW; } goto QQQJu; ADpR1: CmMFc: goto mm5R5; mm5R5: o7_cW: goto tlN1m; DsfsU: $this->doAction("\157\x70\x74\x69\x6d\x69\172\x61\164\151\157\156\137\x62\145\146\157\162\x65\x5f\x63\x61\143\x68\145\x5f\143\x6c\145\141\156\137\x75\163\145\162", $id, $lang); goto lNXsu; YCqjZ: if (!isset($parseUrl["\150\x6f\x73\164"])) { goto BQggx; } goto yBuN0; BXgR6: Scwdv: goto ODEf9; Bc79b: $parseUrl = FormatUtil::getParseUrl($url); goto YCqjZ; yBuN0: $parseUrl["\150\x6f\x73\164"] = FormatUtil::maybeUrlNoDots($parseUrl["\x68\x6f\x73\x74"]); goto zW5Cj; JUIin: $root = Util::getConstant("\x4f\120\124\x49\x4d\111\132\x41\x54\111\117\x4e\x5f\x43\101\103\x48\x45\x5f\120\101\x54\110") . $parseUrl["\150\157\x73\x74"] . "\x2d" . $userKey . "\x2a" . $parseUrl["\160\x61\x74\x68"]; goto DsfsU; tlN1m: $this->doAction("\x6f\160\x74\x69\155\151\x7a\x61\164\x69\157\156\137\x61\146\164\145\162\137\143\x61\x63\150\145\137\x63\154\x65\141\156\137\165\163\x65\162", $id, $lang); goto BXgR6; zW5Cj: BQggx: goto JUIin; ODEf9: } goto Eu43W; jL5gW: if (!$user) { goto nCIoI; } goto pzIc_; oQB0n: nCIoI: goto C7jyc; iBXkX: $urls = $this->applyFilters("\x6f\x70\x74\151\155\x69\172\x61\x74\x69\x6f\156\x5f\x63\154\x65\141\x6e\137\144\x6f\x6d\x61\151\x6e\x5f\165\x72\154\163", $urls, $lang); goto rVxls; rVxls: $urls = array_filter($urls); goto G9A6l; Eu43W: NeF3J: goto oQB0n; pzIc_: $userKey = $user->user_login . "\x2d" . Setting::getSecretCacheKey(); goto Qy4hh; C7jyc: } public function adminPostPurgeOpcache() { goto JCZ1C; NkikJ: hrOys: goto xJLL1; JCZ1C: if (!(!isset($_GET["\137\x77\x70\x6e\x6f\x6e\x63\x65"]) || !wp_verify_nonce(sanitize_key($_GET["\137\167\x70\156\x6f\156\143\x65"]), "\157\160\164\x69\155\x69\x7a\141\164\151\x6f\156\137\x70\x75\x72\x67\x65\137\x6f\160\143\141\143\x68\145"))) { goto aCCrV; } goto sJjIR; sJjIR: wp_nonce_ays(''); goto evrNv; fkxv3: MRFPE: goto BR7tV; xJLL1: set_transient(UserUtil::getId() . "\137\x6f\x70\143\x61\143\x68\145\x5f\x70\165\162\x67\145\137\x72\145\163\x75\x6c\x74", $result); goto BkIpY; evrNv: aCCrV: goto PZMvA; Bla_l: goto hrOys; goto mE_aM; Df7BX: if (!$reset) { goto bMQDU; } goto CuEXV; BkIpY: wp_safe_redirect(esc_url_raw(wp_get_referer())); goto djuNm; uiCJ4: $result = ["\x72\x65\x73\165\154\x74" => "\145\x72\x72\157\162", "\155\145\163\163\x61\147\x65" => __("\117\x50\x63\141\143\150\145\x20\x70\165\x72\147\x65\40\146\x61\x69\x6c\145\x64\56", OPTIMIZATION_DOMAIN)]; goto NkikJ; djuNm: die; goto fkxv3; CuEXV: $result = ["\162\145\163\x75\154\164" => "\163\165\143\143\145\x73\x73", "\155\145\x73\163\x61\147\x65" => __("\117\120\x63\141\x63\x68\145\x20\163\165\143\143\x65\x73\x73\x66\x75\154\154\171\40\x70\165\162\x67\x65\x64", OPTIMIZATION_DOMAIN)]; goto Bla_l; mE_aM: bMQDU: goto uiCJ4; h3nf7: $reset = $this->resetOpcache(); goto Df7BX; PZMvA: if (!UserUtil::currentCan("\x6d\x61\156\141\x67\x65\137\x6f\x70\164\x69\x6f\x6e\x73")) { goto MRFPE; } goto h3nf7; BR7tV: } public function widgetUpdateCallback($instance) { $this->cleanDomain(); return $instance; } }
