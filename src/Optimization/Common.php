<?php
 namespace Optimization; use Boilerplate\Container\Container; use Boilerplate\Util\ArrayUtil; use Boilerplate\Util\CommonUtil; class Common extends Container { public function getSourcePath($iSNOk) { goto Jz_nG; Li0WD: $CRRxp = str_replace($hgTz4, $GuTuU, $iSNOk); goto Crlup; l_0Re: if (!preg_match("\57\134\x2f\167\160\55\50\x63\x6f\156\x74\x65\156\x74\x7c\x69\x6e\x63\x6c\165\x64\x65\x29\134\57\x2f", $iSNOk, $upoja)) { goto XZHLr; } goto FywqO; FywqO: switch (ArrayUtil::get($upoja, 1)) { case "\x63\x6f\x6e\x74\x65\x6e\x74": goto ooJHz; BgXwD: goto xOf9l; goto h0jsT; GVPkV: $hgTz4 = content_url(); goto BgXwD; ooJHz: $GuTuU = CommonUtil::getConstant("\x57\120\x5f\103\117\x4e\124\x45\x4e\124\137\104\x49\122"); goto GVPkV; h0jsT: case "\151\156\143\x6c\x75\x64\x65": goto AUri_; AUri_: $GuTuU = CommonUtil::getConstant("\101\x42\123\120\101\x54\x48") . CommonUtil::getConstant("\x57\x50\x49\x4e\103"); goto Rp0x1; V4H9j: goto xOf9l; goto xjsXT; Rp0x1: $hgTz4 = includes_url(); goto V4H9j; xjsXT: } goto D4_xl; HUFxx: if (!isset($hgTz4, $GuTuU)) { goto Th7iV; } goto Li0WD; Jz_nG: $CRRxp = false; goto l_0Re; DCXAy: return $CRRxp; goto VtbEq; Ix3RF: XZHLr: goto DCXAy; ijTpj: xOf9l: goto HUFxx; Crlup: Th7iV: goto Ix3RF; D4_xl: nQXBV: goto ijTpj; VtbEq: } }
