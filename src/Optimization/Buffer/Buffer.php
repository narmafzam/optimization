<?php
 namespace Optimization\Buffer; use Boilerplate\Logger; abstract class Buffer { protected ?string $id; protected Test $test; public function __construct(Test $gScvq) { $this->test = $gScvq; } public function getId() : ?string { return $this->id; } public function getTest() : Test { return $this->test; } protected function logLastTestError($pQBWE = null, $F0VQI = null) { $NrH8S = $this->getTest()->getLastError($pQBWE, $F0VQI); $this->log($NrH8S["\155\145\x73\x73\x61\x67\x65"], $NrH8S["\144\141\164\x61"]); } protected function log($Hu2co, $yzYDS = [], $jDNPs = 100) { goto kwV2C; OWoh4: Logger::addLog($Hu2co, $yzYDS, $jDNPs); goto jbj4X; kwV2C: if (!class_exists("\102\x6f\x69\x6c\145\162\x70\154\141\164\145\x5c\104\x65\x76\x65\154\x6f\160\155\145\x6e\x74\134\x4c\x6f\x67\x67\145\x72")) { goto jZ9Ug; } goto OWoh4; jbj4X: jZ9Ug: goto ol_x0; ol_x0: } protected function isHtml(string $vwY7Y) { return preg_match("\x2f\x3c\x5c\57\x68\164\x6d\x6c\x3e\57\151", $vwY7Y); } public abstract function maybeInitProcess(); public abstract function maybeProcessBuffer(string $vwY7Y); }
