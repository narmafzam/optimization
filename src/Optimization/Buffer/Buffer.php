<?php
 namespace Optimization\Buffer; use Boilerplate\Logger; abstract class Buffer { protected ?string $id; protected Test $test; public function __construct(Test $gScvq) { $this->test = $gScvq; } public function getId() : ?string { return $this->id; } public function getTest() : Test { return $this->test; } protected function logLastTestError($pQBWE = null, $F0VQI = null) { $NrH8S = $this->getTest()->getLastError($pQBWE, $F0VQI); $this->log($NrH8S["\155\145\163\163\141\x67\x65"], $NrH8S["\x64\x61\164\141"]); } protected function log($Hu2co, $yzYDS = [], $jDNPs = 100) { goto CVK9e; CVK9e: if (!class_exists("\x42\157\x69\154\x65\162\x70\x6c\141\x74\145\134\114\x6f\147\147\145\162")) { goto UXJZf; } goto pfhit; bIQC4: UXJZf: goto AApOx; pfhit: Logger::addLog($Hu2co, $yzYDS, $jDNPs); goto bIQC4; AApOx: } protected function isHtml(string $vwY7Y) { return preg_match("\57\74\134\57\150\164\x6d\x6c\76\57\x69", $vwY7Y); } public abstract function maybeInitProcess(); public abstract function maybeProcessBuffer(string $vwY7Y); }
