<?php
 namespace Optimization; use Boilerplate\Util\AjaxUtil; use Boilerplate\Util\CommentUtil; use Boilerplate\Util\CommonUtil; use Boilerplate\Util\PluginUtil; use Boilerplate\Util\PostUtil; use Boilerplate\Util\TaxonomyUtil; use Boilerplate\Util\TermUtil; use Boilerplate\Util\UserUtil; use Optimization\Util\FileUtil; use Optimization\Util\FormatUtil; use Optimization\Util\I18NUtil; use Optimization\Util\Util; use Exception; use FilesystemIterator; use IteratorIterator; use RegexIterator; use WP_Post; use WP_Taxonomy; use WP_Term; use WP_Upgrader; abstract class Purge extends Common { protected ?string $id = null; protected $paths; public function addActions() : self { $this->addAction("\x73\x77\x69\x74\x63\x68\x5f\x74\150\145\x6d\x65", [$this, "\143\154\145\x61\156\104\157\x6d\141\x69\x6e"])->addAction("\157\x70\164\151\155\x69\172\141\164\x69\x6f\156\x5f\x70\x75\x72\x67\145\x5f\x63\141\x63\x68\145\x5f\x66\x69\x6c\145\x73", [$this, "\143\154\145\x61\156\x44\157\155\x61\x69\156"])->addAction("\x61\x66\164\x65\162\137\x6f\160\164\151\155\x69\x7a\141\164\x69\157\x6e\x5f\143\x6c\145\x61\156\137\160\157\163\164", [$this, "\x70\x75\162\147\x65\x50\157\x73\x74\x54\x65\162\155\x73\x55\x72\x6c\163"])->addAction("\157\x70\x74\151\155\x69\172\x61\164\x69\157\x6e\137{$this->getId()}\x5f\x63\x6c\145\x61\x6e\137\144\157\x6d\x61\x69\156", [$this, "\x63\x6c\145\x61\156\104\x6f\155\141\151\x6e"])->addAction("\x63\x6f\x6d\x6d\x65\156\164\137\x70\157\x73\x74", [$this, "\143\x6c\x65\141\156\120\x6f\163\x74\x4f\156\x50\x6f\x73\x74\x43\x6f\155\x6d\145\x6e\164"], 2, 99)->addAction("\x70\x72\145\137\x70\x6f\x73\164\x5f\165\x70\x64\141\x74\x65", [$this, "\143\154\x65\x61\156\x50\x6f\163\x74\x43\141\143\x68\x65\117\x6e\x53\x74\x61\x74\x75\x73\103\x68\x61\x6e\147\x65"], 2)->addAction("\165\160\x67\x72\x61\x64\x65\162\137\160\x72\157\x63\x65\163\x73\137\x63\x6f\x6d\160\x6c\145\164\145", [$this, "\x70\165\162\x67\145\117\156\x54\x68\145\155\x65\x55\x70\144\141\164\145"], 2); return parent::addActions(); } public function addFilters() : self { goto lDmEx; Ezvm7: foreach ($taxonomies as $taxonomy) { $this->addFilter("{$taxonomy}\x5f\162\x6f\167\x5f\x61\x63\x74\x69\x6f\156\x73", [$this, "\x61\144\144\120\x75\x72\147\145\x54\145\x72\155\114\151\x6e\x6b"], 2); j4916: } goto OaW2k; xKJOa: if (!(!AjaxUtil::isAjax() && is_admin())) { goto agvU5; } goto ugUrr; OaW2k: sx3FZ: goto AnoGE; AnoGE: agvU5: goto YIjKZ; YIjKZ: return parent::addFilters(); goto MROQ1; ugUrr: $taxonomies = TaxonomyUtil::getList(["\160\165\x62\x6c\151\x63" => true, "\160\165\x62\154\151\143\154\x79\x5f\x71\165\x65\x72\171\141\x62\x6c\x65" => true], TaxonomyUtil::NAMES); goto Ezvm7; lDmEx: $this->addFilter("\157\160\164\151\155\151\172\141\x74\x69\157\156\137\x63\x6c\x65\141\x6e\137\x66\x69\154\145\163", [$this, "\x63\154\x65\141\x6e\106\x69\154\x65\x73\125\x73\x65\x72\163"]); goto xKJOa; MROQ1: } public function cleanPostOnPostComment($comment, $approved) { goto LmcTF; xoSwi: mpoiL: goto jFNwO; LmcTF: $post = CommentUtil::getPost($comment); goto CQE8J; H025d: $this->cleanPost(PostUtil::getId($post)); goto xoSwi; CQE8J: if (!$post) { goto mpoiL; } goto H025d; jFNwO: } public function getId() : string { return $this->id; } public function getPaths() : array { goto P0XAP; qsi_c: return $paths; goto jva6v; zkJw2: $paths = [$paths]; goto vmVah; Eqn4J: if (!is_string($paths)) { goto iwDIn; } goto zkJw2; P0XAP: $paths = $this->paths; goto Eqn4J; vmVah: iwDIn: goto qsi_c; jva6v: } public function cleanPostCacheOnStatusChange($postId, $data) { goto x1ohx; nJ2JT: j2GXm: goto vzJP6; KAnyZ: $purgeUrls = $this->getPurgeUrls($postId, $post); goto bGJCC; i18S8: $this->doAction("\x62\145\x66\x6f\162\x65\x5f\x6f\160\x74\x69\155\x69\172\141\164\151\x6f\x6e\137\143\154\145\x61\156\137\x70\x6f\163\x74", $post, $purgeUrls, $lang); goto c4ljS; pYnCv: $this->doAction("\x61\x66\164\145\x72\x5f\157\x70\164\x69\155\x69\x7a\141\x74\151\157\x6e\x5f\x63\154\x65\x61\156\137\x70\x6f\163\164", $post, $purgeUrls, $lang); goto RG7mW; bGJCC: $purgeUrls = (array) $this->applyFilters("\157\x70\164\151\155\151\172\x61\x74\x69\157\x6e\x5f\x70\157\163\164\137\160\165\x72\147\145\x5f\x75\x72\154\163", $purgeUrls, $post); goto i18S8; x1ohx: $post = PostUtil::get($postId); goto I1NDm; spbc9: $this->cleanHomeFeeds(); goto pYnCv; c4ljS: $this->cleanFiles($purgeUrls); goto J6P1l; p6_AH: $lang = I18NUtil::getLang($postId); goto KAnyZ; I1NDm: if (!($post && "\x70\165\x62\154\x69\x73\x68" === PostUtil::getField("\160\157\163\x74\137\x73\x74\x61\164\x75\x73", $post))) { goto j2GXm; } goto p6_AH; RG7mW: $this->doAction("{$this->getId()}\x5f\141\146\x74\x65\162\x5f\x6f\160\x74\x69\155\x69\x7a\x61\164\x69\157\156\137\x63\x6c\x65\x61\x6e\137\160\157\163\164", $post, $purgeUrls, $lang); goto nJ2JT; J6P1l: $this->cleanHome($lang); goto spbc9; vzJP6: } public function cleanFilesUsers($urls) { goto VCGtG; KDtsH: q02Em: goto C2AmL; xQMcb: foreach ($urls as $url) { goto r5MOe; ym1YS: $patternUrls[] = $parseUrl["\163\x63\150\145\155\x65"] . "\72\57\x2f" . $parseUrl["\x68\157\163\x74"] . "\52" . $parseUrl["\160\x61\x74\x68"]; goto HDyg_; r5MOe: $parseUrl = FormatUtil::getParseUrl($url); goto ym1YS; HDyg_: ofYhq: goto b28ok; b28ok: } goto KDtsH; C2AmL: return $patternUrls; goto C94SZ; VCGtG: $patternUrls = []; goto xQMcb; C94SZ: } public function purgeOnThemeUpdate($upgrader, $hook) { goto TLr_O; aShRE: if (!is_array($hook["\164\150\x65\155\145\x73"])) { goto GZ4dM; } goto s9JJL; fLcx2: if (!("\x74\150\x65\155\x65" === $hook["\164\171\160\145"])) { goto U6fIs; } goto aShRE; PMhEU: $themes = [$current_theme->get_template(), $current_theme->get_stylesheet()]; goto wxsul; a8A8h: GZ4dM: goto ONDy3; s9JJL: $current_theme = wp_get_theme(); goto PMhEU; TLr_O: if (!("\165\x70\x64\x61\x74\145" === $hook["\141\143\164\151\x6f\x6e"])) { goto oDvHy; } goto fLcx2; jktcV: $this->cleanDomain(); goto NGck1; wxsul: if (!array_intersect($hook["\x74\150\145\x6d\145\x73"], $themes)) { goto VAgv0; } goto jktcV; NGck1: VAgv0: goto a8A8h; ONDy3: U6fIs: goto UsqjV; UsqjV: oDvHy: goto n8BKT; n8BKT: } public function maybePurgeCacheOnTermChange($termId, $ttId, $taxonomy) { goto mK3Uo; DwO0s: $this->cleanDomain(); goto r6d4k; mK3Uo: if (!TaxonomyUtil::isPublic($taxonomy)) { goto WU3Ar; } goto DwO0s; r6d4k: WU3Ar: goto ObTrK; ObTrK: } private function maybeRemoveDirectory($dir) { goto Lxkpk; ikGcp: WNP6z: goto iE7Y8; Lxkpk: if (!$this->getFilesystem()->isDirectory($dir)) { goto WNP6z; } goto LX3JD; LX3JD: FileUtil::rrmdir($dir); goto ikGcp; iE7Y8: } private function purgeUrl(string $url, $pagination = false) { goto gqcmo; cmnAw: jKet3: goto nmvbg; mQyis: foreach ($this->getCacheDirectories($parsedUrl["\x68\x6f\x73\x74"]) as $dir) { goto ncUhf; EZvXp: foreach (FileUtil::getIterator($path) as $item) { goto dHa4R; Sw9mx: ElNQp: goto GAqlG; fVpMc: $this->getFilesystem()->remove($item->getPathname()); goto xQmMN; dHa4R: if (!$item->isFile()) { goto Lh3_W; } goto fVpMc; xQmMN: Lh3_W: goto Sw9mx; GAqlG: } goto e3M02; ZP5bg: WCcVG: goto nFqRo; nQoij: eAsGc: goto MY2dn; dPk76: if (!$this->getFilesystem()->exists($path)) { goto hwMXM; } goto EZvXp; inrrg: $this->maybeRemoveDirectory(trailingslashit($path) . $wp_rewrite->pagination_base); goto ZP5bg; nFqRo: hwMXM: goto nQoij; ncUhf: $path = $dir . $parsedUrl["\160\x61\x74\150"]; goto dPk76; mp7Ex: if (!$pagination) { goto WCcVG; } goto inrrg; e3M02: a4YWP: goto mp7Ex; MY2dn: } goto cmnAw; YDM2X: $parsedUrl = $this->parseUrl($url); goto mQyis; gqcmo: global $wp_rewrite; goto YDM2X; nmvbg: } public function getCacheDirectories($urlHost, $path = '', $hardReset = false) { goto CzFdb; t26EK: return $domainDirs[$urlHost]; goto KWb6h; TQxQg: if (!is_array($path)) { goto o3YB1; } goto l4Wf3; TjCZy: FeXCR: goto khtTI; CzFdb: if (!$path) { goto z891U; } goto TQxQg; gdZL6: z891U: goto hL71N; cVkYv: goto FeXCR; goto N1Ldr; Fgwt4: PNPF4: goto t26EK; hL71N: $paths = $this->getPaths(); goto cVkYv; D68N4: $domainDirs[$urlHost] = []; goto BEq0S; khtTI: if (isset($domainDirs[$urlHost])) { goto PNPF4; } goto D68N4; u5ZDJ: $paths = [$path]; goto TjCZy; N1Ldr: o3YB1: goto u5ZDJ; wUGJh: P3Fe_: goto Fgwt4; li2dn: goto FeXCR; goto gdZL6; BEq0S: foreach ($paths as $path) { goto NXmgg; sY34c: try { goto HOHPF; KmG1x: kReqq: goto bU_N_; HOHPF: $entries = new RegexIterator($iterator, $regex); goto ODZvA; ODZvA: foreach ($entries as $entry) { $domainDirs[$urlHost][] = $entry->getPathname(); gF92l: } goto KmG1x; bU_N_: } catch (Exception $e) { $domainDirs[$urlHost] = []; } goto OQ1jx; aTL8_: $regex = sprintf("\x2f\x25\x31\x24\163\45\x32\44\163\x28\56\52\x29\57\x69", FileUtil::normalizePath($path, true), $urlHost); goto sY34c; NXmgg: $path = trailingslashit($path); goto gD25P; gD25P: try { $iterator = new IteratorIterator(new FilesystemIterator($path)); } catch (Exception $e) { return []; } goto aTL8_; OQ1jx: O9fGB: goto GkLJx; GkLJx: } goto wUGJh; l4Wf3: $paths = $path; goto li2dn; KWb6h: } public function purgePostTermsUrls(WP_Post $post) { foreach ($this->getPostTermsUrls($post) as $url) { $this->purgeUrl($url); vwK0_: } PZCtr: } public function addPurgeTermLink($actions, $term) { goto W3xCh; c6vK7: $actions["\x6f\160\x74\151\x6d\151\172\x61\x74\x69\x6f\x6e\x5f\x70\165\x72\x67\145\x5f{$this->getId()}"] = sprintf("\x3c\x61\x20\150\162\145\146\75\42\x25\x31\44\163\x22\76\45\62\44\163\74\x2f\141\76", $url, sprintf(__("\103\154\x65\141\162\40\164\150\151\163\40\45\163", OPTIMIZATION_DOMAIN), $this->getId())); goto MeAW9; rxygs: $url = wp_nonce_url(admin_url("\x61\144\x6d\x69\x6e\x2d\160\x6f\x73\x74\x2e\160\150\x70\x3f\141\x63\x74\151\157\x6e\75\157\160\164\x69\x6d\x69\x7a\141\x74\x69\157\156\137\x70\x75\162\147\x65\x5f{$this->getId()}\46\164\x79\x70\x65\75\x74\x65\162\155\55{$term->term_id}\46\x74\x61\170\x6f\x6e\x6f\x6d\171\x3d{$term->taxonomy}"), "\x6f\x70\x74\151\x6d\151\x7a\141\x74\x69\157\156\137\160\165\162\147\145\137{$this->getId()}\x5f\164\x65\x72\155\x2d{$term->term_id}"); goto c6vK7; MeAW9: MTCIC: goto qp0Cq; qp0Cq: return $actions; goto qVe_Z; W3xCh: if (!UserUtil::currentCan("\155\x61\x6e\x61\x67\x65\x5f\157\x70\164\x69\x6f\156\x73")) { goto MTCIC; } goto rxygs; qVe_Z: } private function parseUrl(string $url) { goto Pd7Pm; Iz2w_: if (!isset($parsedUrl["\150\157\x73\164"])) { goto TjxRC; } goto wJoWp; eJ6tw: TjxRC: goto QgBr_; QgBr_: return $parsedUrl; goto Kt1YP; Pd7Pm: $parsedUrl = FormatUtil::getParseUrl($url); goto Iz2w_; wJoWp: $parsedUrl["\x68\157\163\164"] = FormatUtil::maybeUrlNoDots($parsedUrl["\150\x6f\x74\x73"]); goto eJ6tw; Kt1YP: } private function getDatesArchives($post) { goto KoRBA; HYtWu: return $urls; goto N8pPU; KoRBA: $time = get_the_time("\131\55\x6d\55\x64", $post); goto EsxLK; E3KsA: $urls = [get_year_link($date[0]), get_month_link($date[0], $date[1]), get_day_link($date[0], $date[1], $date[2])]; goto OPFr8; rIS0b: if (!$time) { goto mZlQa; } goto dncku; EsxLK: $urls = []; goto rIS0b; OPFr8: $urls = (array) $this->applyFilters("\x6f\x70\x74\151\x6d\x69\172\x61\164\151\157\156\x5f\160\157\163\x74\x5f\144\141\x74\x65\163\137\165\162\x6c\x73", $urls); goto avrww; dncku: $date = explode("\55", $time); goto E3KsA; avrww: mZlQa: goto HYtWu; N8pPU: } public function purgeDatesArchives($post) { foreach ($this->getDatesArchives($post) as $url) { $this->purgeUrl($url, true); tD5C4: } XvbXT: } private function getPostTermsUrls(WP_Post $post) { goto ODwwW; E0b61: return $this->applyFilters("\x6f\160\x74\151\155\x69\172\141\164\x69\157\156\x5f\x70\x6f\163\x74\137\x74\145\162\x6d\x73\x5f\165\162\154\x73", $urls); goto UlnjN; ODwwW: $urls = []; goto cpr3i; MO_1s: nfDli: goto E0b61; cpr3i: $taxonomies = PostUtil::getTaxonomiesObject($post, PostUtil::OBJECT); goto xgFlv; xgFlv: foreach ($taxonomies as $taxonomy) { goto ew4d1; tMZF9: if (!$terms) { goto sbD1O; } goto ZuzRZ; ZuzRZ: foreach ($terms as $term) { goto QoI41; Je66Z: foreach ($ancestors as $ancestor) { goto QzWmP; rzyW6: Dxfg4: goto G3B2_; s5dft: $urls[] = $ancestorUrl; goto rzyW6; gahiW: if (!$ancestorObject) { goto QFRCn; } goto n4KrJ; QzWmP: $ancestorObject = TermUtil::get($ancestor, $taxonomy); goto gahiW; G3B2_: QFRCn: goto aCKg9; aCKg9: X8bgp: goto s2c6R; n4KrJ: $ancestorUrl = TermUtil::getLink($ancestorObject, $taxonomy); goto y5mYQ; y5mYQ: if (!$ancestorUrl) { goto Dxfg4; } goto s5dft; s2c6R: } goto fhFvf; QoI41: $permalink = TermUtil::getLink($term, $taxonomy); goto FZeH_; Hmtbk: $urls[] = $permalink; goto PYYgr; FZeH_: if (!$permalink) { goto j704K; } goto Hmtbk; fhFvf: Lmv_4: goto i7whq; i6YVc: svTua: goto BM464; PYYgr: j704K: goto G0nfY; G0nfY: if (!TaxonomyUtil::isHierarchical($taxonomy)) { goto dPG2V; } goto b1J2F; i7whq: dPG2V: goto i6YVc; b1J2F: $ancestors = (array) get_ancestors(TermUtil::getId($term), $taxonomy); goto Je66Z; BM464: } goto y8wiY; bH8if: $terms = PostUtil::getTerms($post, $taxonomy); goto tMZF9; ew4d1: if (!($taxonomy instanceof WP_Taxonomy && $taxonomy->public && "\160\162\x6f\144\165\x63\x74\x5f\163\x68\x69\160\x70\x69\x6e\x67\137\143\154\141\163\x73" === $taxonomy->name)) { goto RR28I; } goto Tu0vI; SIOf8: sbD1O: goto as2co; y8wiY: NhzAx: goto SIOf8; as2co: RR28I: goto A_04P; Tu0vI: $taxonomy = TaxonomyUtil::getName($taxonomy); goto bH8if; A_04P: cz3ru: goto LnyEc; LnyEc: } goto MO_1s; UlnjN: } public function cleanDomain($lang = '') { goto FnYAu; rd6To: a9WwO: goto migyw; Eiq8m: $urls = (array) $this->applyFilters("\x6f\x70\x74\x69\x6d\x69\172\x61\x74\151\x6f\156\x5f\143\154\x65\x61\156\x5f\144\x6f\155\x61\151\x6e\137\x75\x72\x6c\163", $urls, $lang); goto p2DA_; NvzHz: if (!($urls && $paths)) { goto W6jY_; } goto RBiK4; dFf1d: $paths = $this->getPaths(); goto NvzHz; FnYAu: $urls = !$lang || is_object($lang) || is_array($lang) || is_int($lang) ? (array) I18NUtil::getUri() : (array) I18NUtil::getHomeUrlByLang($lang); goto Eiq8m; migyw: W6jY_: goto r0by4; p2DA_: $urls = array_filter($urls); goto dFf1d; RBiK4: foreach ($paths as $path) { goto XBore; d43_M: foreach ($urls as $url) { goto Q3KaL; ob2We: JexXH: goto gxNVe; gxNVe: $root = $path . $parsedUrl["\150\157\x73\x74"] . $parsedUrl["\x70\x61\164\x68"]; goto u0hGJ; Iv5kO: foreach ($this->getCacheDirectories($parsedUrl["\150\157\x73\164"], $path) as $dir) { goto wGXAE; wS5aL: lJB31: goto T5yi5; iL3wC: if (!$filesystem->exists($entry)) { goto HGrsi; } goto mvE36; wGXAE: $entry = $dir . $parsedUrl["\x70\141\x74\x68"]; goto Nrrfm; aEc0J: HGrsi: goto jqQfl; jqQfl: ya5dg: goto eQpHc; mvE36: if ($filesystem->isDirectory($entry)) { goto lJB31; } goto ST1qc; ST1qc: $filesystem->remove($entry); goto q9dUt; T5yi5: FileUtil::rrmdir($entry, $dirs2preserve, $filesystem); goto D7AQE; D7AQE: n_Yru: goto aEc0J; q9dUt: goto n_Yru; goto wS5aL; Nrrfm: $filesystem = $this->getFilesystem(); goto iL3wC; eQpHc: } goto Ed2X3; Q3KaL: $parsedUrl = FormatUtil::getParseUrl($url); goto riBnM; nO0cx: $this->doAction("\141\146\x74\145\x72\137\157\160\x74\151\x6d\151\x7a\x61\164\151\x6f\156\x5f\143\154\145\x61\156\x5f\x64\157\155\141\151\156", $root, $lang, $url); goto wxgj7; riBnM: if (!isset($parsedUrl["\150\x6f\163\x74"])) { goto JexXH; } goto RtfM1; u0hGJ: $this->doAction("\x62\145\146\x6f\162\x65\x5f\157\160\x74\151\155\151\172\x61\x74\151\157\x6e\x5f\x63\154\145\141\x6e\137\x64\157\x6d\141\151\x6e", $root, $lang, $url); goto Iv5kO; RtfM1: $parsedUrl["\x68\157\x73\x74"] = FormatUtil::maybeUrlNoDots($parsedUrl["\150\x6f\163\x74"]); goto ob2We; wxgj7: P3AZi: goto xTysb; Ed2X3: KIr9k: goto nO0cx; xTysb: } goto dAfjD; XBore: $dirs2preserve = I18NUtil::getDirectoriesToPreserve($lang, $path); goto d43_M; cpr38: ARFsV: goto ailq2; dAfjD: TH0sU: goto cpr38; ailq2: } goto rd6To; r0by4: } public function getPurgeUrls($id, $post) { goto w1HeQ; qZOgN: $cachePurgePages = Setting::getSetting("\143\141\143\150\x65\x5f\160\x75\x72\147\145\137\160\141\147\x65\163"); goto LAo8v; Mo2_C: return array_flip(array_flip($urls)); goto CPc2z; DyClD: foreach ($parents as $parent) { $urls[] = PostUtil::getPermalink($parent); tReJY: } goto Nr22N; asdLl: $paths = $this->getPaths(); goto yH4cl; Xyb7W: if (!$archive) { goto xG6IX; } goto KZ8bv; z5ojn: $permalink = str_replace(["\x25\160\x6f\x73\164\x6e\141\x6d\145\45", "\45\x70\141\147\x65\156\141\155\145\45"], $permalinkStructure[1], $permalinkStructure[0]); goto cRNaD; KZ8bv: $urls[] = $archive; goto cm9mx; Iucfd: $permalinkStructure = Util::getSamplePermalink($id); goto z5ojn; cm9mx: $urls[] = $archive . "{$GLOBALS["\167\x70\137\x72\x65\167\162\151\164\145"]->pagination_base}"; goto xRxen; BJDyO: global $blog_id; goto W52BX; EBM9G: P5zlu: goto Mo2_C; cRNaD: if (!(FormatUtil::extractUrlComponent($permalink, PHP_URL_PATH) !== "\x2f")) { goto SDFWi; } goto EHttn; w1HeQ: $urls = []; goto Iucfd; Nr22N: mJDoA: goto EBM9G; SqhSX: oKQjB: goto Oynul; vioPa: e5t_1: goto jdpQu; W52BX: $homeUrl = CommonUtil::getOption("\150\x6f\155\145"); goto B1NtM; LAo8v: if (!$cachePurgePages) { goto oKQjB; } goto BJDyO; qORUl: $homeUrl = "{$homeParts["\163\143\x68\x65\x6d\145"]}\x3a\57\x2f{$homeParts["\x68\x6f\163\x74"]}"; goto asdLl; qGmPR: EBkGK: goto SqhSX; jdpQu: $homeParts = FormatUtil::getParseUrl($homeUrl); goto qORUl; Oynul: $urls[] = PostUtil::getAuthorUrl($post); goto sWGb7; xgyyx: SDFWi: goto DLDlN; iAE2r: switch_to_blog($blog_id); goto exTUi; exTUi: $homeUrl = CommonUtil::getOption("\x68\x6f\155\x65"); goto j5QBq; DLDlN: $postType = PostUtil::getType($post); goto prshJ; j5QBq: restore_current_blog(); goto vioPa; yH4cl: foreach ($paths as $path) { goto pxHcH; bsCiL: foreach ($cachePurgePages as $page) { goto yGTWN; q2Tbd: foreach ($matches as $file) { $urls[] = str_replace($path, untrailingslashit($homeUrl), $file->getPath()); iZD6Q: } goto L0ae3; yfWDd: TyEkd: goto wu7_G; L0ae3: cJW1X: goto DCUhi; yGTWN: if (!strstr($page, "\52")) { goto uq0eZ; } goto ZAOzw; DCUhi: goto TyEkd; goto SnSVf; ZAOzw: $matches = FileUtil::getRecursiveDirFilesByRegex($path, "\43" . $page . "\43\x69"); goto q2Tbd; SnSVf: uq0eZ: goto aJU41; aJU41: $urls[] = trailingslashit($homeUrl) . $page; goto yfWDd; wu7_G: } goto nNYs0; nNYs0: cXxdc: goto UFrnW; pxHcH: $path .= $homeParts["\150\157\x73\x74"]; goto bsCiL; UFrnW: nkxTf: goto EcNhK; EcNhK: } goto qGmPR; EHttn: $urls[] = $permalink; goto xgyyx; HVn1D: if (!(bool) $parents) { goto P5zlu; } goto DyClD; sWGb7: $parents = get_post_ancestors($id); goto HVn1D; xRxen: xG6IX: goto qZOgN; prshJ: $archive = PostUtil::getTypeArchiveLink($postType); goto Xyb7W; B1NtM: if (!(!empty($blog_id) && is_multisite())) { goto e5t_1; } goto iAE2r; CPc2z: } public function cleanPost(?string $postId) { goto zcGVs; jdQoB: if (!PostUtil::isTypePublic($postType)) { goto cTbQo; } goto ZM2iK; F5Uua: if (!($post && $postType && !in_array($postType, ["\x61\164\x74\141\143\x68\155\145\156\164", "\x6e\x61\x76\137\x6d\x65\156\x75\x5f\x69\x74\x65\x6d"]) && !in_array($post->post_status, ["\x64\162\x61\146\164", "\141\165\x74\x6f\55\x64\162\141\146\164"]))) { goto bQlab; } goto jdQoB; HWbVK: $lang = false; goto f1A0s; mG6H8: $postType = PostUtil::getType($post); goto F5Uua; tsgiL: $this->cleanHome($lang); goto V8hQt; BL8vA: if (defined("\x44\117\111\116\107\x5f\x41\x55\124\x4f\x53\101\126\105")) { goto bXhiE; } goto bkfdi; P42ul: $purgeUrls = $this->getPurgeUrls($postId, $post); goto PG1r9; Tm4oy: y2IC3: goto ID8Hc; Lr2cf: cTbQo: goto EI36M; NQdoL: bXhiE: goto Tm4oy; eghp8: goto rUjf3; goto J5a13; bkfdi: $post = PostUtil::get($postId); goto mG6H8; ZM2iK: $i18nPlugin = I18NUtil::has(); goto HWbVK; ZuUhA: $lang = $GLOBALS["\163\x69\164\x65\x70\x72\x65\163\x73"]->get_language_for_element($postId, "\160\x6f\163\164\137" . $postType); goto eghp8; PG1r9: $this->doAction("\142\x65\146\x6f\x72\x65\x5f\x6f\x70\164\151\x6d\x69\172\141\164\x69\157\156\x5f\x63\x6c\145\141\x6e\137\160\x6f\163\164", $post, $purgeUrls, $lang); goto SFb6V; Hr_0G: XPF6R: goto ZuUhA; V8hQt: $this->cleanHomeFeeds(); goto Hp1c5; h4ztd: rUjf3: goto P42ul; Mcx1o: $done[$postId] = 1; goto BL8vA; SFb6V: $purgeUrls = $this->applyFilters("\x6f\x70\x74\x69\155\x69\x7a\141\164\x69\x6f\x6e\137\x70\x6f\163\164\x5f\x70\x75\162\147\145\137\165\x72\154\163", $purgeUrls, $post); goto u_2MH; gFZFx: $lang = pll_get_post_language($postId); goto h4ztd; zcGVs: static $done = []; goto Cq8Nk; Hp1c5: $this->doAction("\141\146\x74\x65\162\x5f\x6f\160\x74\x69\x6d\x69\172\141\x74\151\157\x6e\137\x63\154\x65\x61\156\x5f\x70\157\x73\x74", $post, $purgeUrls, $lang); goto Lr2cf; f1A0s: if ("\167\160\x6d\x6c" === $i18nPlugin && !PluginUtil::isActive("\x77\157\157\x63\157\155\x6d\x65\x72\x63\145\55\x6d\165\154\164\151\154\x69\156\147\x75\141\x6c\57\167\160\155\154\55\167\x6f\157\x63\x6f\155\x6d\145\x72\143\145\56\160\150\x70")) { goto XPF6R; } goto YBVrL; wOYlr: goto rUjf3; goto Hr_0G; J5a13: QQFlT: goto gFZFx; EI36M: bQlab: goto NQdoL; u_2MH: $this->cleanFiles($purgeUrls); goto tsgiL; Cq8Nk: if (isset($done[$postId])) { goto y2IC3; } goto Mcx1o; YBVrL: if ("\x70\157\154\x79\x6c\141\156\x67" === $i18nPlugin && function_exists("\160\154\x6c\x5f\147\145\164\x5f\160\x6f\163\164\137\154\141\156\147\165\x61\x67\145")) { goto QQFlT; } goto wOYlr; ID8Hc: } public function cleanFiles($urls) { goto lZATt; tQCDp: aPSr_: goto I7d6l; I7d6l: $this->doAction("\x61\x66\x74\x65\x72\137\x6f\x70\164\151\155\x69\172\x61\x74\151\x6f\x6e\137\x63\154\145\141\156\137\x66\x69\154\145\x73", $urls); goto hakyF; GiC8V: foreach ($urls as $url) { goto S9QhO; BxrjX: vwDy4: goto fds15; iLDFM: VcDIt: goto H04Kf; S9QhO: $this->doAction("\x62\145\x66\157\162\145\137\x6f\160\x74\x69\155\x69\172\x61\164\x69\x6f\156\137\143\x6c\x65\141\x6e\x5f\146\x69\x6c\145", $url); goto gGQKB; obVyr: foreach ($paths as $path) { goto ntEKc; Z8Q9q: gV3Hr: goto AXvMO; ntEKc: foreach ($this->getCacheDirectories($parsedUrl["\x68\x6f\163\164"], $path) as $dir) { goto Sol99; VLeko: $filesystem->remove($entry); goto vM1Qx; Sol99: $entry = $dir . $parsedUrl["\160\141\164\x68"]; goto Ip4jZ; LCt47: df9sj: goto jYyzs; Ip4jZ: if (!$filesystem->exists($entry)) { goto z35Xz; } goto VLeko; vM1Qx: z35Xz: goto LCt47; jYyzs: } goto Z8Q9q; AXvMO: YpiSp: goto bDM3h; bDM3h: } goto iLDFM; gGQKB: $url = FormatUtil::maybeUrlNoDots($url); goto vP_qH; H04Kf: $this->doAction("\x61\146\x74\145\x72\137\x6f\160\164\x69\x6d\151\x7a\141\164\x69\x6f\156\x5f\143\x6c\145\x61\x6e\137\146\x69\154\x65", $url); goto BxrjX; vP_qH: $parsedUrl = FormatUtil::getParseUrl($url); goto obVyr; fds15: } goto tQCDp; EP8T9: if (!$urls) { goto mAWmB; } goto Cxczf; lZATt: $urls = array_filter((array) $urls); goto EP8T9; hakyF: mAWmB: goto bF93i; Cxczf: $paths = $this->getPaths(); goto F6doD; F6doD: $filesystem = $this->getFilesystem(); goto ypdyG; ypdyG: $this->doAction("\142\x65\x66\157\x72\x65\137\157\160\164\x69\155\x69\172\x61\164\151\157\x6e\x5f\143\x6c\x65\x61\156\x5f\146\151\154\x65\x73", $urls); goto GiC8V; bF93i: } public function cleanHome($lang = '') { goto kpcNB; xBpRc: if (!isset($parseUrl["\x68\x6f\x73\164"])) { goto BVxyP; } goto Sc30w; uFyDM: foreach ($paths as $path) { goto l9Fe9; qHtlL: OJVRA: goto ClXsd; HdKeN: KRJgV: goto hLMEb; LDfOn: if (!$nowebpDetectFiles) { goto L8Xke; } goto gxwed; IZyW6: $this->doAction("\142\x65\x66\157\x72\x65\137\157\160\164\151\155\151\x7a\141\164\151\157\x6e\137\143\x6c\145\141\x6e\x5f\x68\157\x6d\x65", $root, $lang); goto nciwW; xdvdy: LD_20: goto psay2; nFI4r: foreach ($dirs as $dir) { FileUtil::rrmdir($dir); GIbWJ: } goto p9jK3; mGDqp: uckuP: goto HdKeN; ppOu3: $this->doAction("\x61\x66\164\145\162\x5f\157\x70\164\x69\x6d\151\172\x61\x74\151\x6f\156\x5f\143\154\x65\x61\156\137\150\x6f\x6d\145", $root, $lang); goto K8zFE; M3Mr8: foreach ($nginxMobileDetectFiles as $nginxMobileDetectFile) { $this->getFilesystem()->remove($nginxMobileDetectFile); DYv3C: } goto HtM6G; HtM6G: OnHIO: goto xdvdy; p9jK3: lnbLk: goto qHtlL; RXC4s: if (!$dirs) { goto OJVRA; } goto nFI4r; hLMEb: $dirs = glob($root . "\52\57" . $GLOBALS["\x77\160\x5f\x72\145\x77\162\x69\x74\145"]->pagination_base, GLOB_NOSORT); goto RXC4s; E_5ee: foreach ($files as $file) { $this->getFilesystem()->remove($file); tPmls: } goto mGDqp; ClXsd: $nginxMobileDetectFiles = glob($root . "\x2f\56\x6d\157\142\151\x6c\145\x2d\141\143\x74\151\166\x65", GLOB_BRACE | GLOB_NOSORT); goto QTnvX; nciwW: $files = glob($root . "\57\x7b\151\x6e\x64\145\170\x2c\x69\156\144\x65\x78\55\x2a\175\56\x7b\x68\164\x6d\154\54\150\164\x6d\x6c\x5f\x67\x7a\x69\160\x7d", GLOB_BRACE | GLOB_NOSORT); goto h3yTe; vunN8: L8Xke: goto ppOu3; h3yTe: if (!$files) { goto KRJgV; } goto E_5ee; psay2: $nowebpDetectFiles = glob($root . "\57\56\156\157\x2d\x77\x65\x62\160", GLOB_BRACE | GLOB_NOSORT); goto LDfOn; K8zFE: tYR7p: goto B_hjg; l9Fe9: $root = $path . $parseUrl["\x68\x6f\x73\x74"] . "\x2a" . untrailingslashit($parseUrl["\x70\x61\x74\150"]); goto KrHe6; gxwed: foreach ($nowebpDetectFiles as $nowebpDetectFile) { $this->getFilesystem()->remove($nowebpDetectFile); CpCxi: } goto Guq46; KrHe6: $root = $this->applyFilters("\x6f\160\164\151\x6d\x69\172\141\164\x69\157\156\x5f\x63\154\x65\x61\156\137\x68\157\x6d\x65\x5f\x72\x6f\157\164", $root, $parseUrl["\x68\x6f\163\x74"], $parseUrl["\x70\141\x74\x68"]); goto IZyW6; QTnvX: if (!$nginxMobileDetectFiles) { goto LD_20; } goto M3Mr8; Guq46: EpFZY: goto vunN8; B_hjg: } goto DssMc; apzVV: $paths = $this->getPaths(); goto uFyDM; Eaw8W: BVxyP: goto apzVV; kpcNB: $parseUrl = FormatUtil::getParseUrl(I18NUtil::getHomeUrlByLang($lang)); goto xBpRc; DssMc: L8dy7: goto UM61k; Sc30w: $parseUrl["\150\x6f\x73\x74"] = FormatUtil::maybeUrlNoDots($parseUrl["\150\157\163\164"]); goto Eaw8W; UM61k: } public function cleanHomeFeeds() { goto DiS68; iqvel: $urls = $this->applyFilters("\157\x70\x74\x69\x6d\151\x7a\x61\164\151\x6f\156\x5f\x63\x6c\x65\141\156\137\150\157\155\x65\x5f\x66\x65\x65\144\163", $urls); goto VrOaD; VrOaD: $this->doAction("\x62\145\146\x6f\x72\x65\x5f\x6f\160\164\151\155\x69\172\x61\x74\151\x6f\x6e\137\x63\x6c\145\x61\x6e\137\150\x6f\x6d\145\x5f\x66\x65\x65\144\x73", $urls); goto tPLfJ; QoWE0: $this->doAction("\141\x66\x74\x65\x72\x5f\x6f\160\x74\x69\155\151\x7a\141\x74\x69\157\x6e\137\143\x6c\x65\141\156\137\x68\x6f\155\x65\x5f\146\x65\145\x64\x73", $urls); goto kLF5S; QIXoy: $urls[] = get_feed_link("\143\x6f\155\x6d\x65\x6e\x74\163\x5f"); goto iqvel; tPLfJ: self::cleanFiles($urls); goto QoWE0; E9TtZ: $urls[] = get_feed_link(); goto QIXoy; DiS68: $urls = []; goto E9TtZ; kLF5S: } public function cleanTerm($termId, $taxonomySlug) { goto rBCvl; dyltm: if ("\167\160\x6d\154" === $i18nPlugin && !PluginUtil::isActive("\x77\x6f\x6f\143\x6f\155\x6d\145\x72\x63\145\55\x6d\x75\x6c\164\151\x6c\x69\156\x67\165\x61\x6c\x2f\x77\160\x6d\x6c\x2d\x77\x6f\x6f\143\x6f\x6d\x6d\145\162\143\x65\x2e\160\x68\160")) { goto Fkw22; } goto fFeGf; RCZdk: goto eOdbb; goto Wbgma; kW11a: $purgeUrls = $this->applyFilters("\x72\x6f\x63\153\x65\164\137\164\x65\x72\x6d\137\x70\165\x72\147\145\x5f\x75\162\154\163", $purgeUrls, $term); goto Z23q1; Wbgma: Fkw22: goto SShs2; Ml4pV: $this->doAction("\142\x65\x66\x6f\x72\x65\137\162\x6f\x63\x6b\145\164\x5f\x63\x6c\x65\x61\156\137\x74\145\x72\x6d", $term, $purgeUrls, $lang); goto kW11a; Mu3t3: $i18nPlugin = I18NUtil::has(); goto dyltm; FDJO5: if (!("\x2f" !== FormatUtil::extractUrlComponent($permalink, PHP_URL_PATH))) { goto fgbu8; } goto YPa_U; Z23q1: $this->cleanFiles($purgeUrls); goto JiUjG; uZaQc: fgbu8: goto Ml4pV; pQI9V: Jx6jL: goto G2Ovx; vP50q: eOdbb: goto EF9Un; JiUjG: $this->cleanHome($lang); goto IlhJP; IlhJP: $this->doAction("\x61\x66\x74\145\162\137\162\x6f\143\153\x65\164\x5f\x63\154\x65\141\156\137\164\x65\x72\x6d", $term, $purgeUrls, $lang); goto nk1u8; KeelS: goto eOdbb; goto pQI9V; Uqq9K: $term = TermUtil::getBy("\x69\x64", $termId, $taxonomySlug); goto Mu3t3; G2Ovx: $lang = pll_get_term_language($termId); goto vP50q; EF9Un: $permalink = TermUtil::getLink($term, $taxonomySlug); goto FDJO5; fFeGf: if ("\x70\x6f\x6c\x79\x6c\x61\x6e\x67" === $i18nPlugin) { goto Jx6jL; } goto e1Ylv; e1Ylv: $lang = false; goto RCZdk; SShs2: $lang = $GLOBALS["\163\151\x74\x65\160\162\x65\x73\x73"]->get_language_for_element($termId, "\164\141\x78\x5f" . $taxonomySlug); goto KeelS; rBCvl: $purgeUrls = []; goto Uqq9K; YPa_U: array_push($purgeUrls, $permalink); goto uZaQc; nk1u8: } }
