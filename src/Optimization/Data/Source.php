<?php
 namespace Optimization\Data; use Boilerplate\Util\ArrayUtil; use Boilerplate\Util\ThemeUtil; class Source { const JS = "\x6a\163"; const CSS = "\x63\x73\163"; protected ?array $extra = []; protected ?string $url = null; protected ?string $type = null; protected ?string $path = null; protected ?string $handle = null; protected bool $combined = false; protected ?array $dependencies = []; public function isCombined() : bool { return $this->combined; } public function setCombined(bool $combined) : self { $this->combined = $combined; return $this; } public function getUrl() : ?string { return $this->url; } public function setUrl(?string $url) : self { $this->url = $url; return $this; } public function getType() : ?string { return $this->type; } public function setType(?string $type) : self { $this->type = $type; return $this; } public function getPath() : ?string { return $this->path; } public function setPath(?string $path) : self { $this->path = $path; return $this; } public function getHandle() : ?string { return $this->handle; } public function setHandle(?string $handle) : self { $this->handle = $handle; return $this; } public function isJs() : bool { return self::JS == $this->getType(); } public function getDependencies() : ?array { return $this->dependencies; } public function addDependency($dependency) : self { $this->dependencies[] = $dependency; return $this; } public function getExtra() : ?array { return $this->extra; } public function addExtra($key, $value) { $this->extra[$key] = $value; } public function hasExtra($key) { return ArrayUtil::get($this->getExtra(), $key); } public function addExtras($extras) { goto AQ7jU; wMVja: lkpSp: goto tpTvH; tpTvH: return $this; goto l3QcQ; AQ7jU: foreach ($extras as $key => $extra) { $this->addExtra($key, $extra); G0MD7: } goto wMVja; l3QcQ: } }
