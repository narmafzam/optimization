<?php
 namespace Optimization\Critical\CSS; use Boilerplate\Filesystem; use Boilerplate\Util\ArrayUtil; use Optimization\Critical\CSS\Data\Property; use Optimization\Critical\CSS\Data\Rule; use Optimization\Critical\Util as BaseClass; class Util extends BaseClass { public static function isNotGenerated(?string $permalink = null) { goto ZPfys; DdaN4: $fullName = false; goto GSSGB; DFYvH: return $fullName; goto Ui2Tx; GSSGB: He0px: goto DFYvH; j2n4Z: if (!Filesystem::getInstance()->exists($fullName)) { goto He0px; } goto DdaN4; ZPfys: $fullName = Util::getFullName($permalink); goto j2n4Z; Ui2Tx: } public static function isGenerated(?string $permalink = null) { goto MRZRz; G4maC: vlkKp: goto MzE9e; y32FS: if (Filesystem::getInstance()->exists($fullName)) { goto vlkKp; } goto iV1mA; iV1mA: $fullName = false; goto G4maC; MzE9e: return $fullName; goto u8Ubw; MRZRz: $fullName = Util::getFullName($permalink); goto y32FS; u8Ubw: } public static function getFullPath(?string $path = null) { return parent::getFullPath("\57\143\163\163"); } public static function getFullName(string $permalink = null, ?string $path = null) : ?string { return parent::getFullName($permalink, "\x2f\143\163\x73"); } public static function getCharset($css) { goto TTlM2; VBJ5K: $charset = null; goto Jr06v; alTST: $charset = reset($charset); goto jJmtB; dDvxB: return $charset; goto uBPqD; Jr06v: if (!($charset = reset($matches))) { goto JJllt; } goto alTST; jJmtB: JJllt: goto dDvxB; TTlM2: preg_match_all("\x2f\100\x63\150\x61\162\163\x65\x74\x20\x22\x5b\x5e\x22\135\53\x2b\42\73\x2f", $css, $matches); goto VBJ5K; uBPqD: } private static function doCleanup(string $css) { goto CHJtG; v6cRy: return $css; goto W9Ija; CHJtG: $css = preg_replace("\x2f\x40\x63\150\141\162\x73\145\164\x20\x22\133\136\42\x5d\53\53\x22\73\x2f", '', $css); goto IBE4W; IBE4W: $css = self::cleanup($css); goto v6cRy; W9Ija: } private static function cleanup(string $string) { goto HVNjy; iEc3h: $string = preg_replace("\x7c\x2f\x5c\52\56\52\x3f\x5c\52\x2f\174", '', $string); goto XIb_5; XIb_5: $string = preg_replace("\x2f\134\x73\x5c\x73\x2b\x2f", "\x20", $string); goto tnjcE; HVNjy: $string = str_replace(["\xd", "\12"], '', $string); goto qi9e3; tnjcE: $string = trim($string); goto uU1LS; uU1LS: $string = rtrim($string, "\73"); goto twNHa; qi9e3: $string = str_replace(["\x9"], "\40", $string); goto iEc3h; twNHa: return $string; goto HkoB1; HkoB1: } public static function splitRules(string $styles) { goto KPzRq; S_o2o: foreach ($mediaMatches as $index => $mediaMatch) { goto OSgib; peTf1: $styles = ''; goto wLVTq; LHzQH: Hnjal: goto x0rq7; MIqkr: $parts[] = $mediaMatch; goto C7WWB; OSgib: $split = explode($mediaMatch, $styles); goto PKj1B; JTu5j: $parts[] = ArrayUtil::unset($split, $key); goto MIqkr; PKj1B: $key = array_key_first($split); goto JTu5j; C7WWB: if ($split && is_array($split)) { goto Hnjal; } goto peTf1; gZn6x: SBxoe: goto L2lVe; L2lVe: WynZG: goto dJYb0; x0rq7: $styles = join('', $split); goto gZn6x; wLVTq: goto SBxoe; goto LHzQH; dJYb0: } goto laPbU; UmxfN: $mediaSelector = "\x2f\100\x6d\x65\x64\x69\141\x2e\52\77\x5b\136\x7b\135\x2b\134\173\50\133\134\163\134\x53\x5d\x2b\x3f\x5c\x7d\x29\134\163\52\x5c\x7d\174\100\x6b\145\171\x66\162\x61\x6d\145\x73\x2e\x2a\77\x5b\136\x7b\135\x2b\134\x7b\50\x5b\x5c\x73\x5c\x53\135\53\x3f\134\x7d\x29\x5c\163\52\134\x7d\x7c\x40\163\165\160\x70\x6f\162\164\163\56\x2a\x3f\x5b\136\173\x5d\53\x5c\x7b\x28\x5b\134\x73\x5c\x53\x5d\x2b\x3f\134\175\x29\x5c\x73\52\x5c\x7d\174\100\x66\x6f\156\x74\55\146\x61\143\x65\x2e\x2a\77\133\136\173\x5d\53\50\x5b\134\x73\134\123\135\x2b\77\x29\x5c\163\52\x5c\x7d\57"; goto awjJM; laPbU: JKUQ2: goto INHPy; INHPy: $parts[] = $styles; goto fSJzU; AvBmp: $mediaMatches = reset($mediaMatches); goto S_o2o; BKlE7: return $indexedRules; goto vm2la; NI2mC: $allRules = []; goto OGUW2; OGUW2: $indexedRules = []; goto a4qJi; KPzRq: $parts = []; goto O7yTR; awjJM: preg_match_all($mediaSelector, $styles, $mediaMatches); goto AvBmp; a4qJi: foreach ($parts as $index => $part) { goto Mi0ga; npCv5: goto osPWY; goto eUuSk; P3i_i: if (!preg_match($mediaSelector, $part)) { goto JN0zG; } goto Zj0w8; Zj0w8: $mediaQueryString = substr($part, 0, strpos($part, "\x7b")); goto h7k9R; Mi0ga: $result = []; goto P3i_i; KS9sc: D5uQ1: goto iQ277; iQ277: SPZ08: goto cl_nX; Ki083: if (!$result) { goto D5uQ1; } goto NjocS; YFT7B: $indexedRules[][$mediaQueryString] = array_diff($result, $allRules); goto FempR; NjocS: $allRules = array_merge($allRules, $result); goto KS9sc; t4yEG: $result = (array) explode("\175", $mediaQueryRules); goto YFT7B; zCCQ_: $mediaQueryRules = substr($mediaQueryRules, 0, -1); goto t4yEG; FempR: Mf2FM: goto npCv5; eUuSk: JN0zG: goto Q7wCk; CkizF: osPWY: goto Ki083; Q7wCk: $result = (array) explode("\x7d", $part); goto YDePA; h7k9R: if (!(trim($mediaQueryString) !== "\x40\x6d\x65\144\151\x61\40\x70\162\x69\156\x74")) { goto Mf2FM; } goto Lm0qM; YDePA: $indexedRules[][''] = array_diff($result, $allRules); goto CkizF; Lm0qM: $mediaQueryRules = substr($part, strpos($part, "\x7b") + 1); goto zCCQ_; cl_nX: } goto WyuA1; O7yTR: $mediaMatches = []; goto UmxfN; fSJzU: $parts = array_filter(array_filter($parts, "\164\x72\151\x6d")); goto NI2mC; WyuA1: RiFfV: goto BKlE7; vm2la: } public static function splitProperties(string $properties) { goto OelDX; VLB2U: $items = (array) preg_split("\57\x3b\50\77\75\x28\x5b\136\134\x28\135\52\x5c\50\133\136\134\50\135\x2a\x5c\51\x29\52\133\x5e\x5c\51\135\52\x24\x29\x28\77\75\50\133\x5e\x5c\42\x5d\52\x5c\x22\x5b\136\x5c\x22\135\52\x5c\42\51\x2a\x5b\136\x5c\x22\x5d\52\x24\x29\x28\77\x3d\50\x5b\136\134\47\135\52\134\47\x5b\136\134\x27\x5d\x2a\x5c\47\51\x2a\133\x5e\x5c\47\x5d\x2a\44\51\x2f", $properties); goto PknbI; PknbI: return array_values($items); goto MY2iV; OelDX: $properties = self::cleanup($properties); goto VLB2U; MY2iV: } public static function properties2string(array $properties) { goto G9XrP; Ub9zu: foreach ($properties as $property) { goto SeUQA; alB_G: NBkHy: goto QYHIw; hOHV1: $chunks[] = trim($property->__toString(), "\73") . "\x3b"; goto alB_G; QYHIw: FioqW: goto bBss2; SeUQA: if (!$property instanceof Property) { goto NBkHy; } goto hOHV1; bBss2: } goto e0j5u; G9XrP: $chunks = []; goto Ub9zu; Icvd5: return trim(implode("\40", $chunks), "\x3b"); goto frWDY; e0j5u: B06_i: goto Icvd5; frWDY: } public static function array2rules(array $rules) { goto g0Njf; u97_a: U26ZU: goto hzZlb; cMppm: foreach ($rules as $order => $ruleSet) { goto AB89f; GQB4t: tb07a: goto d0b_h; AB89f: foreach (reset($ruleSet) as $rule) { $objects = array_merge($objects, self::toRules(key($ruleSet), $rule, $order)); JRgbz: } goto KVKLn; KVKLn: ad_EZ: goto GQB4t; d0b_h: } goto u97_a; g0Njf: $objects = []; goto cMppm; hzZlb: return $objects; goto Xp4vC; Xp4vC: } public static function getRules(string $css) { goto RBOP9; UviOy: return self::array2rules($rules); goto yjWBI; sT1u5: $rules = self::splitRules($css); goto UviOy; RBOP9: $css = self::doCleanup($css); goto sT1u5; yjWBI: } public static function toRules(string $media, string $rule, int $order) { goto KnmE6; GDAPk: $selectorIdentifier = 0; goto rh5Xs; O2M1m: TM6AQ: goto KQ5vl; KQ5vl: V1CkD: goto C3ZAM; C3ZAM: return $rules; goto zaeq3; hyQzT: $selectors = (array) explode("\54", trim($chunks[$selectorIdentifier])); goto Z4Q18; rh5Xs: $ruleIdentifier = 1; goto tRib1; Z4Q18: $properties = self::splitProperties($chunks[$ruleIdentifier]); goto jozKh; IbIdR: if (!isset($chunks[$ruleIdentifier])) { goto V1CkD; } goto hyQzT; KnmE6: $rule = self::cleanup($rule); goto AKMtJ; tRib1: $rules = []; goto IbIdR; jozKh: foreach ($selectors as $selector) { goto YcqPp; YcqPp: $selector = trim($selector); goto ZeMBO; ZeMBO: $properties = self::array2properties($properties); goto MEySh; MEySh: $rules[] = new Rule($media, $selector, $properties, $order); goto zGHwC; zGHwC: U4MWl: goto OI1b3; OI1b3: } goto O2M1m; AKMtJ: $chunks = explode("\173", $rule); goto GDAPk; zaeq3: } public static function array2properties(array $properties) { goto T1lYr; GBZys: foreach ($properties as $property) { goto MD0pS; D5ZWa: $objects[] = $object; goto Yhv79; Yhv79: B5Sox: goto SLwST; MD0pS: $object = self::toProperty($property); goto wzNH4; wzNH4: if (!$object) { goto B5Sox; } goto D5ZWa; SLwST: y2l3Z: goto o6VZ5; o6VZ5: } goto WHISP; WHISP: Q3I_Y: goto LLZew; T1lYr: $objects = []; goto GBZys; LLZew: return $objects; goto BidbP; BidbP: } public static function toProperty(string $property) : ?Property { goto aAics; ImKdy: [$name, $value] = array_map("\x74\x72\151\x6d", explode("\x3a", $property, 2)); goto d2bzb; d2bzb: $object = new Property($name, $value); goto Aqwn3; aAics: $object = null; goto mNvLn; Aqwn3: Ie13F: goto eQWgG; eQWgG: return $object; goto NQMHc; mNvLn: if (!(strpos($property, "\x3a") !== false)) { goto Ie13F; } goto ImKdy; NQMHc: } }
