let loadingResources = false, loadingResourcesDone = false;

registerListener('load', () => setTimeout(() => {
    loadAssetResource('link[data-href][rel=stylesheet]:not([href])');
    setTimeout(() => doAction('boilerplate_asset_loaded'), 1000);
}, 3000));

registerListener('load', () => setTimeout(() => {
    registerListener('click scroll', () => {
        loadAssetResource('script[data-src]:not([src])', true);
        loadingResourcesDone = true;
    })
}, 5000));

function loadAssetResource($selector, $trigger = false) {

    if (!loadingResourcesDone) {

        let $elements = document.querySelectorAll($selector),
            $assetResources = [];
        if ($elements.length) {

            for (let j = 0; j < $elements.length; j++) {

                $assetResources.push($elements[j]);
            }

            $assetResources.sort(function (a, b) {

                let $pa = a.getAttribute('data-priority'),
                    $pb = b.getAttribute('data-priority');

                return $pa - $pb;
            });

            if (!loadingResources) {

                loadingResources = true;
                for (let i = 0; i < $assetResources.length; i++) {
                    setTimeout(() => {
                        let $element = $assetResources[i], $target;
                        switch ($element.nodeName.toLowerCase()) {
                            case 'script':
                                $target = 'data-src';
                                $element.src = $element.getAttribute($target);
                                break;
                            case 'link':
                                $target = 'data-href';
                                $element.href = $element.getAttribute($target);
                                break;
                        }

                        if ($target) {

                            $element.removeAttribute($target);
                            addClass($element, 'asset-loaded');
                        }
                        {#if ($trigger#}
                        {#    && $assetResources.length - 1 === i) {#}

                        {#    let DOMContentLoaded_event = document.createEvent("Event");#}
                        {#    DOMContentLoaded_event.initEvent("DOMContentLoaded", true, true);#}
                        {#    window.document.dispatchEvent(DOMContentLoaded_event);#}
                        {#    window.document.dispatchEvent(new Event('load'));#}
                        {#}#}
                    }, i * 150)
                }
            }
            loadingResources = false;
        }
    }
}
